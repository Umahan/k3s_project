# grafana-k8s.yaml
---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
# Secret для admin пароля (лучше, чем plain env)
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secret
  namespace: monitoring
type: Opaque
stringData:
  # хранит пароль администратора Grafana
  GF_SECURITY_ADMIN_PASSWORD: "admin123"
---
# ConfigMap с datasource provisioning (файл datasources.yml)
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
  namespace: monitoring
data:
  datasources.yml: |
    apiVersion: 1

    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: true
---
# PVC для /var/lib/grafana (persist data)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  # в k3s обычно есть storageClass local-path; при необходимости поменять
  storageClassName: local-path
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:9.4.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              # делаем доступный порт 3000 на хосте (поведение, как -p 3000:3000)
             # hostPort: 3000
              name: http
          env:
            - name: GF_SECURITY_ALLOW_EMBEDDING
              value: "true"
            # берем админ пароль из Secret
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: GF_SECURITY_ADMIN_PASSWORD
          volumeMounts:
            # монтируем provisioning datasource из ConfigMap как один файл
            - name: provisioning-datasources
              mountPath: /etc/grafana/provisioning/datasources/datasources.yml
              subPath: datasources.yml
              readOnly: true
            # персистентное хранилище Grafana
            - name: grafana-storage
              mountPath: /var/lib/grafana
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: provisioning-datasources
          configMap:
            name: grafana-provisioning
            # optional: true
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
---
# ClusterIP Service (для внутреннего доступа внутри кластера)
#apiVersion: v1
#kind: Service
#metadata:
#  name: grafana
#  namespace: monitoring
#spec:
#  type: NodePort
#  selector:
 #   app: grafana
 # ports:
 #   - protocol: TCP
 #     port: 3000
  #    targetPort: 3000
  #    nodePort: 30030


apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  type: ClusterIP   # internal only
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
